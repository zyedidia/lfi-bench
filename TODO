Cleanup/Finish
--------------

-cleanup how skia builds benchmarks
-fix skia, maybe compiler update broke?
-fix libvpx, benchmark code changed.

-investigate moving from git clones to vcpkg for grabbing code and
installing.

-move to vendoring benchmarks so they don't break when benchmarks change, can periodically refresh.
-do a full run to check that runtime updates work.
-expat benchmark runs too long and is not representative, replace it.
-libpng benchmark is dumb and runs too long.
-add ioctl support in lfi runtime for brotli, finish incorporating brotli.
-libwepb runs too long.
-check that inputs are large enough that user space costs are and not being amoritized.

-zstd decompress benchmark has too much system time, not enough user, needs to be fixed. compress runs to long, need to fix.
-should check zlib also.


Microbenchmarks
---------------
-bulk memory operations.

Move to LFI_ROOT
---------------
make all tool paths relative to LFI_ROOT
if enviroment variable set, use that, otherwise default to LFI_ROOT in lfi-bench
add script to pull and uncompress latest lfi-release.

Migrate to New runtime
----------------------
-include runtime as git submodule
-change lfi-run calls to refer to locally installed

Integration Test Support:
------------------------
-test if build fails
-input validation (test that output is correct) - make validate
-run verifier (test that binaries verify without errors) - make verify (for compiler development)
-lfi-bind tests (maybe in lfi-bind instead?)
-add sanitizer tests
-add PAC/MTE tests

Setup Github workflow to run once a day/on demand
-----------------------------------


Next
-----

ffmpeg (lots of formats)

other
-----
libsqlite -- ships with android
freetype -- part of AOSP

image processing
----------------
opencv -- doesn't ship with android, popular with apps
neven  (face detector)- part of AOSP

parsing 
-------
libxstl, tinyxml -- AOSP

compression:
-------------

liblzma, bzip2, liblz4, minizip,snappy,libarchive

codecs
--------
libvips -- does dynamic code generation (liborc) and multithreading, will require some extra work
sonivox
